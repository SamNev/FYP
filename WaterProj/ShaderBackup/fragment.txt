#version 150

uniform float u_MaxHeight;
uniform vec3 u_Color;
uniform vec3 u_SurroundingColor[4];
uniform bool u_IgnoreHeight;
uniform vec4 u_SurroundingWaterHeight;

in VS_OUT {
    vec3 FragPos;
    vec2 Offset;
} fs_in;

void main()
{ 
    float rootTwo = 1.4142;
    vec3 col = vec3(0.0, 0.0, 0.0);
    
    vec3 topColX = fs_in.Offset.x * u_SurroundingColor[0] + (1.0 - fs_in.Offset.x) * u_SurroundingColor[2];
    vec3 botColX = fs_in.Offset.x * u_SurroundingColor[3] + (1.0 - fs_in.Offset.x) * u_SurroundingColor[1];
    col = fs_in.Offset.y * botColX + (1.0 - fs_in.Offset.y) * topColX;

    float topWatX = fs_in.Offset.x * u_SurroundingWaterHeight.x + (1.0 - fs_in.Offset.x) * u_SurroundingWaterHeight.z;
    float botWatX = fs_in.Offset.x * u_SurroundingWaterHeight.w + (1.0 - fs_in.Offset.x) * u_SurroundingWaterHeight.y;
    float watHeight = fs_in.Offset.y * botWatX + (1.0 - fs_in.Offset.y) * topWatX;

    if(!u_IgnoreHeight)
    {
	float depth = watHeight - fs_in.FragPos.y;
	if(depth < 0.1)
	    depth = 0.0;
	
        col = depth <= 0 ? col * (0.2 + (fs_in.FragPos.y/u_MaxHeight) * 0.8) : col * vec3(0.0, (0.075 - max(depth/20.0, 0)), (0.1 - max(depth/20.0, 0))) + vec3(0.0, depth/50.0, 0.2 + depth/10.0);
	//if(depth > 0)
	//    col = vec3(1.0f, 0.0f, 0.0f);
        gl_FragColor = vec4(col, 0.0f);
    }
    else
    {
	gl_FragColor = vec4(col, 0.0f);
    }
}
